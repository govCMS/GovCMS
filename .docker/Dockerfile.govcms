# Stage 1: Build the application
FROM drupal:10-php8.1 as builder

# Set timezone to Australia/Sydney by default
RUN ln -sf /usr/share/zoneinfo/Australia/Sydney /etc/localtime

# Install required packages and PHP extensions
RUN \
    --mount=type=cache,target=/var/cache/apt \
    apt-get update && \
    apt-get install -y --no-install-recommends libicu-dev sqlite3 mariadb-client git unzip rsync sudo net-tools iputils-ping && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    docker-php-ext-configure intl && \
    docker-php-ext-install intl

# Configure PHP settings
RUN echo "memory_limit = 512M" >> /usr/local/etc/php/conf.d/docker-php-ram-limit.ini && \
    echo "upload_max_filesize = 100M" >> /usr/local/etc/php/conf.d/docker-php-upload-limit.ini && \
    echo "post_max_size = 100M" >> /usr/local/etc/php/conf.d/docker-php-upload-limit.ini

# Install and configure Xdebug
RUN pecl install xdebug \
    && docker-php-ext-enable xdebug \
    && echo "xdebug.mode=debug" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \
    && echo "xdebug.client_host = host.docker.internal" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini

# Manually create phpstorm coverage directory, needed to get coverage results in PHPStorm
RUN mkdir -p "/opt/phpstorm-coverage" && chmod a+rw "/opt/phpstorm-coverage"

# Set Composer environment variables
ENV COMPOSER_ALLOW_SUPERUSER=1
ENV COMPOSER_MEMORY_LIMIT=-1
ENV SIMPLETEST_BASE_URL="http://localhost"
ENV SIMPLETEST_DB='mysql://drupal:drupal@mariadb/drupal'

# Set working directory
WORKDIR /app

# Copy only the necessary files for dependency installation
COPY composer.json ./

# Install Composer dependencies
RUN \
    --mount=type=cache,mode=0777,target=/root/.composer/cache \
    composer config --no-plugins allow-plugins.phpstan/extension-installer 1 && \
    composer require palantirnet/drupal-rector drupal/core-dev:"^10.0" mglaman/drupal-check --dev --no-update && \
    composer update --no-scripts --no-autoloader && \
    cp vendor/palantirnet/drupal-rector/rector.php .

# Create a symbolic link
RUN rm -rf /opt/drupal && \
    ln -sf /app/web /var/www/html

# Stage 2: Final application image
FROM builder as site

# Set the working directory
WORKDIR /app

# Copy the rest of the application files
COPY . /app/

# Configure Composer
RUN \
    --mount=type=cache,mode=0777,target=/root/.composer/cache \
    composer config --no-plugins allow-plugins.phpstan/extension-installer 1 && \
    composer install

# Adjust ownership
RUN chown -R www-data:www-data web/sites web/modules web/themes

# Set the PATH environment variable
ENV PATH=${PATH}:/app/bin
